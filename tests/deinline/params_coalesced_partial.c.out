// Src lines 12
// Dest lines 8
//
// Verify that parameters with the same value are coalesced, even if the matching
// pairs in one invocation don't match one-to-one another invocation and
// there are also non-coalescing usages of the parameter between invocations
//
// In the function calls a and c below the first param_int_0 is not coalesceable
// but the third and fourth usages are, similarly with f1 and param_int_1
// Also, the parameters used on a() on f1 vs. f2 have different names, still should
// be coalesced and similarly with c().
// Additionally, function call e below is constant across occurrences, so it shouldn't
// require a formal parameter
//

void f1(param_int_0, param_int_1);
void f2(param_int_0, param_int_1, param_int_2, param_int_3);
void subframe2(int param_int_0, int param_int_1, int param_int_2, int param_int_3, int param_int_4);

void f1(param_int_0, param_int_1)
{
    subframe2(param_int_0, param_int_1, 1, 3, 5);
}

void f2(param_int_0, param_int_1, param_int_2, param_int_3)
{
    subframe2(param_int_1, param_int_3, 0, 2, 4);
}

void subframe2(int param_int_0, int param_int_1, int param_int_2, int param_int_3, int param_int_4)
{
    a(param_int_0, param_int_1, param_int_0, param_int_0);
    b(param_int_2);
    c(param_int_0, param_int_1, param_int_0, param_int_0);
    d(param_int_3);
    e(4);
    f(param_int_4);
}
